# This is a basic workflow to help you get started with Actions

name: Test CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  watch:
   types: [started]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:    
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      name: test
      tag: ${{ '3.20.090221' }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: run sh
      if: github.repository_owner == github.actor
      shell: bash
      run: |
        #echo $(curl -sIL ${{ secrets.URL }})
        
        LatestRelease=$(curl -s https://api.github.com/repos/10bits/gedoor-Build/releases/latest|jq .tag_name -r)
        LatestReleaseTag=${LatestRelease#*.}
        LatestTag=$tag
        function version_gt() { test "$(echo "$@" | tr " " "\n" | sort -V | head -n 1)" != "$1"; }
        if version_gt $LatestTag $LatestReleaseTag; then
          echo "release"
        fi
    - name: one
      id: one
      shell: bash
      run: |
        function set_env() { echo "$1=$2" >> $GITHUB_ENV; }
        echo ::set-output name=one1::true
        source $GITHUB_WORKSPACE/test.sh ${{ secrets.URL }} ${{ secrets.APP_NAME }}
        LatestCheck=$(date -u -d"+8 hour" "+%Y-%m-%d %H:%M:%S")
        set_env APP_LATEST_CHECK  "$LatestCheck"
    - name: two
      env:
        JSON: ${{ toJson(github.event) }}
      shell: bash
      run: | 
        echo ${{ env.url }}
        echo ${{ steps.one.outputs.one1 }}
        echo ${{ env.git_url }}
        echo ${{ env.name }}
        echo ${{ github.repository_owner }}
        echo ${{ github.event_name }}
        echo ${{ github.actor }}
        echo $APP_LATEST_CHECK
        #echo $JSON
    
